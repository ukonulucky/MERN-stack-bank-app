const express = require("express")
const allUserSchema = require("../dB/dBSchema")
const jwt = require("jsonwebtoken")

const router = express.Router()

const handleErorrs = (err) => {
  const generatedError = {

  }
  if (err.code) {
    generatedError["phoneNumber"] = "phoneNumber must be unique"
    return generatedError
  }
  

  if (err.message.includes("allUser validation failed")) {
    console.log(err.errors)
    Object.values(err.errors).map(i => {
     generatedError[i.properties.path] = i.properties.message
    })
  
  }
  if (err.message === "incorrect phonenumber") {
   generatedError["phoneNumberError"] ="incorrect phonenumber"
  }
  if (err.message === "incorrect password") {
    generatedError["passwordError"] ="incorrect password"
  }
  return generatedError
}
// creaingToken


const lifeTime = 60 * 60 * 3 // a lifetime of 3 hours
 
const creatJwt = (id) => {
  return jwt.sign({ id }, "mysignature", {
     expiresIn: lifeTime
   })
}

// creating user routes

// register route


router.post("/register", async (req, res) => {
  try {
    console.log(req.body)
        const { phoneNumber, email, address, fullName, password } = req.body
      if (phoneNumber && email && address && fullName && password) {
      
            const newUser = new allUserSchema({
                phoneNumber, email, password, fullName, address
            })
            await newUser.save()
        console.log(newUser)
        // creating cookie
        const token = creatJwt(newUser._id)
        res.cookie('user-tokin', token, {
          maxAge: lifeTime * 1000,
          httpOnly:true
        })
        res.status(201).json(newUser)
     }
  } catch (error) {
    const newErrors = handleErorrs(error)
    console.log("this is the error", newErrors)
    res.status(202).json({newErrors})
   }
}) 

router.post("/login", async (req, res) => {
  try {
      console.log(req.body)
        const { phoneNumber, password} = req.body
      const findUser = await allUserSchema.login(phoneNumber, password)
       // creating cookie
    console.log(findUser)
       const token = creatJwt(findUser)
       res.cookie('user-tokin', token, {
         maxAge: lifeTime * 1000,
         httpOnly:true
       })
       res.status(201).json(findUser)
  } catch (error) {
    console.log("this is the error", error.message)
      const errors = handleErorrs(error)
     res.status(202).json(errors)
  }
})

module.exports = router